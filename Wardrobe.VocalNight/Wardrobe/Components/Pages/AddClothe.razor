@page "/addclothe"
@using Wardrobe.Model
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime
@inject IWardrobeService wardrobeService
@inject ImageService imageService

<h2>@heading</h2>
<div class="row">
    <div class="col-md-6">
        <div class="form-group">
            <label for="Name"> Name *</label>
            <input form="Name" class="form-control" @bind="@clothe.Name" />
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Color"> Color *</label>
            <input form="Color" class="form-control" @bind="@clothe.Color" />
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <InputFile OnChange="HandleFileUpload" />
            <br />
            @if (!string.IsNullOrEmpty(imagePath))
            {
                <img src="/SiteImages/@imagePath" alt="Preview" style="max-width: 200px; max-height: 200px;" />
            }
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@Save" value="Save" />
                <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</div>
@code {
    WardrobeViewModel clothe = new WardrobeViewModel();
    string heading = "Insert clothe to the database";
    private string imagePath;

    private async Task Save()
    {
        await wardrobeService.AddClothe(new WardrobeViewModel
            {
                Color = clothe.Color,
                ImagePath = String.IsNullOrEmpty(imagePath) ? "" : imagePath,
                Name = clothe.Name
            });

        NavigationManager.NavigateTo("Wardrobe");
    }


    void Cancel()
    {
        NavigationManager.NavigateTo("Wardrobe");
    }

    private async Task HandleFileUpload( InputFileChangeEventArgs e )
    {
        var imageFile = e.File;

        if (imageFile != null)
        {
            var stream = imageFile.OpenReadStream(9120000);
           
            imagePath = await imageService.SaveImageAsync(stream, imageFile.Name);
        }
    }
}